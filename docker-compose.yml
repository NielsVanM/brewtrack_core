services:
  traefik:
    image: 'traefik:v2.7'
    container_name: 'traefik'
    command:
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
    ports:
      - '80:80'
      - '8080:8080'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'

  api_gate:
    build:
      context: .
      dockerfile: ./apps/api_gate/Dockerfile
      target: development
    command: npm run start:dev api_gate
    env_file:
      - ./apps/api_gate/.env
    depends_on:
      - rabbitmq
      - traefik
      - auth_service
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3000:3000'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api_gate.entrypoints=web'
      - 'traefik.http.routers.api_gate.rule=PathPrefix(`/api`)'
      - 'traefik.http.routers.api_gate.middlewares=api_gate_strip_api'
      - 'traefik.http.middlewares.api_gate_strip_api.stripprefix.prefixes=/api'

  auth_service:
    build:
      context: .
      dockerfile: ./apps/auth_service/Dockerfile
      target: development
    command: npm run start:dev auth_service
    env_file:
      - ./apps/auth_service/.env
    depends_on:
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'
